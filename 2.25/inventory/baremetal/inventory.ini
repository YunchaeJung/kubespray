# ## Configure 'ip' variable to bind kubernetes services on a
# ## different ip than the default iface
# ## We should set etcd_member_name for etcd cluster. The node that is not a etcd member do not need to set the value, or can set the empty string value.
[all]
# node1 ansible_host=95.54.0.12  # ip=10.3.0.1 etcd_member_name=etcd1
# node2 ansible_host=95.54.0.13  # ip=10.3.0.2 etcd_member_name=etcd2
# node3 ansible_host=95.54.0.14  # ip=10.3.0.3 etcd_member_name=etcd3
# node4 ansible_host=95.54.0.15  # ip=10.3.0.4 etcd_member_name=etcd4
# node5 ansible_host=95.54.0.16  # ip=10.3.0.5 etcd_member_name=etcd5
# node6 ansible_host=95.54.0.17  # ip=10.3.0.6 etcd_member_name=etcd6

# ## configure a bastion host if your nodes are not directly reachable
# [bastion]
# bastion ansible_host=x.x.x.x ansible_user=some_user

k8smaster1 ansible_host=192.168.116.131 ip=192.168.116.131 etcd_member_name=etcd1
k8smaster2 ansible_host=192.168.116.132 ip=192.168.116.132 etcd_member_name=etcd2
k8smaster3 ansible_host=192.168.116.133 ip=192.168.116.133 etcd_member_name=etcd3
k8sproxy ansible_host=192.168.116.130 ip=192.168.116.130
k8sworker1 ansible_host=192.168.116.134 ip=192.168.116.134
k8sworker2 ansible_host=192.168.116.135 ip=192.168.116.135

[kube_control_plane]
# node1
# node2
# node3
k8smaster1
k8smaster2
k8smaster3

[etcd]
# node1
# node2
# node3
k8smaster1
k8smaster2
k8smaster3

[kube_node]
# node2
# node3
# node4
# node5
# node6
k8smaster1
k8smaster2
k8smaster3
k8sproxy
k8sworker1
k8sworker2

[proxy-node]
k8sproxy

[worker-node]
k8sworker1
k8sworker2


[kube_control_plane:vars]
node_labels={"node-role.kubernetes.io/master" : "", "master" : "true", "node-role.kubernetes.io/control-plane" : "", "control-plane" : "true"}

[proxy-node:vars]
node_labels={"node-role.kubernetes.io/proxy" : "", "proxy" : "true"}

[worker-node:vars]
node_labels={"node-role.kubernetes.io/worker" : "", "worker" : "true"}


[calico_rr]

[k8s_cluster:children]
kube_control_plane
kube_node
calico_rr

[all:vars]
kubelet_cgroup_driver="systemd"
